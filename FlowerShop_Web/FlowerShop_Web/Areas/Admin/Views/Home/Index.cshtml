


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "/Admin/Home/GetList",
            data: "",
            contextType: "application/json; chartset=utf8",
            dataType: "json",
            success: OnSuccess,
        });
        function OnSuccess(data) {
            const barChart = document.getElementById('barChart');
            const pieChart = document.getElementById('pieChart');
            var _data = data;
            var _labels = _data[0];
            var _ChartData = _data[1];
            var colors = ['Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray',
                'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray',
                'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray'];

            new Chart(barChart,
                {
                    type: 'bar',
                    data: {
                        labels: _labels,
                        datasets: [{
                            backgroundColor: colors,
                            data: _ChartData,
                            borderWidth: 1,
                        }]
                    }
                });

        }
    });

</script>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@using Flower_Models;
@using Flower_Repository;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context
@inject SignInManager<ApplicationUser> SignInManager

<section class="mx-10 mt-2 mb-5">
    <div class="mb-10 flex gap-3">
        @* revenue-today *@
        <div class="flex space-x-4 rounded-md border-2 p-4">
            <div class="items-center rounded-lg bg-red-600 p-3 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 013 19.875v-6.75zM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V8.625zM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V4.125z" />
                </svg>

            </div>
            <div>
                <div class="text-2xl font-thin">@ViewBag.TotalRevenueToday</div>
                <div class="font-medium leading-5">Doanh thu ngày</div>
            </div>
        </div>
        @* revenue-month *@
        <div class="flex space-x-4 rounded-md border-2 p-4">
            <div class="items-center rounded-lg bg-yellow-400 p-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 013 19.875v-6.75zM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V8.625zM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V4.125z" />
                </svg>

            </div>
            <div>
                <div class="text-2xl font-thin">@ViewBag.RevenueMonth</div>
                <div class="font-medium leading-5">Doanh thu tháng</div>
            </div>
        </div>
        @* order-quantity *@
        <div class="flex space-x-4 rounded-md border-2 p-4">
            <div class="items-center rounded-lg bg-green-600 p-3 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
                </svg>

            </div>
            <div>
                <div class="text-2xl font-thin">@ViewBag.Quantity</div>
                <div class="font-medium leading-5">Đơn hàng</div>
            </div>
        </div>
        @* guest-view *@
        <div class="flex space-x-4 rounded-md border-2 p-4">
            <div class="items-center rounded-lg bg-blue-600 p-3 text-white">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>

            </div>
            <div>
                <div class="text-2xl font-thin">@ViewBag.userCount</div>
                <div class="font-medium leading-5">Lượt xem</div>
            </div>
        </div>
    </div>

    <div class="row mb-5">
        <div class="col-9">
            <span class="mt-5 mb-2 font-bold text-2xl">Biểu đồ doanh thu từng ngày trong tháng hiện tại</span>
            <canvas id="barChart"
                    data-te-dataset-label="Biểu đồ doanh thu từng ngày trong tháng"
                    width="200"
                    height="110"
                    style="width:179px;height:110px;"></canvas>
        </div>
    </div>

    <div class="mb-5 w-3/5 overflow-hidden">
        <canvas id="line-chart"></canvas>
    </div>

    <div class="mx-auto w-3/5 overflow-hidden">
        <canvas id="radar-chart"></canvas>
    </div>

    @* Top-view-products *@
    @*
    <table class="table table-striped table-bordered w-75 my-3">
    <thead>
    <tr>
    <th>Product</th>
    <th>View</th>
    </tr>
    </thead>
    <tbody>

    @{
    List<Flower_Models.Product> listProduct = ViewBag.listViewCout;
    }
    @for (int i = 0; i < 20 && i < listProduct.Count(); i++)
    {
    <tr>
    <td>@listProduct[i].Name_Product</td>
    <td>@listProduct[i].ViewCount</td>
    </tr>
    }
    </tbody>
    </table> *@



    <div class="font-bold text-2xl mt-10 mb-3">Thống kê tỉ lệ mua hàng của khách</div>
    <div class="flex gap-3 grid-cols-3">
        <!-- product-card-rating -->
        @{
            var listUser = (UserManager.Users.ToList());
            //var listBill = _context.Bills.ToList();

            /// thống kê của từng khách hàng khi mua và xem product
            foreach (var user in listUser)
            {
                var roles = await UserManager.GetRolesAsync(user);
                if (roles.Contains("Admin"))
                {
                    continue;
                }
                <div class="rounded-md border-2 p-4">
                    <div class="my-2">@user.Email</div>
                    @{


                        var listMUP = _context.ManagerUserProducts.Where(x => x.ID_Customer == user.Id).ToList();
                        foreach (var Mup in listMUP)
                        {

                            var userProductQuantities = _context.BillDetails
                            .Where(bd => bd.Bill.ID_Customer == Mup.ID_Customer
                            && bd.ID_Product == Mup.ID_Product) // Lọc theo người dùng và sản phẩm
                            .GroupBy(bd => bd.ID_Product) // Nhóm theo sản phẩm
                            .Select(group => new
                            {
                                ProductId = group.Key,
                                TotalQuantity = group.Sum(bd => bd.Product_Quantity)
                            })
                            .ToList();
                            foreach (var upq in userProductQuantities)
                            {
                                var product = _context.Products.FirstOrDefault(x => x.ID_Product == upq.ProductId);
                                if (product != null)
                                {
                                    var ratio = (Mup.ViewCount == 0) ? 0 : (upq.TotalQuantity * 100.0 / Mup.ViewCount);

                                    <div class="my-3">
                                        <div class="mt-4 flex items-center gap-2">
                                            <div class="">@product.Name_Product</div>
                                            <div class="flex text-sm">
                                                <div class="flex items-center gap-1 rounded-lg bg-red-600 px-2 py-1 text-white">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
                                                    </svg>

                                                    <span>@upq.TotalQuantity</span>
                                                </div>
                                            </div>
                                            <div class="flex text-sm">
                                                <div class="flex items-center gap-1 rounded-lg bg-yellow-400 px-2 py-1">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                    </svg>

                                                    <span>@Mup.ViewCount</span>
                                                </div>
                                            </div>
                                            <div class="flex text-sm">
                                                <div class="flex items-center gap-1 rounded-lg bg-green-600 px-2 py-1 text-white">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6a7.5 7.5 0 107.5 7.5h-7.5V6z" />
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 10.5H21A7.5 7.5 0 0013.5 3v7.5z" />
                                                    </svg>

                                                    <span> @ratio.ToString("0.##")%</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                </div>
            }
        }
        <!-- product-rating -->
    </div>


    <div class="font-bold text-2xl mt-10 mb-3">Thống kê tỉ lệ sản phẩm</div>
    <div class="my-3 w-75 space-y-4">
        @{
            ///Thống kê của từng Sản phẩm
            var listProducts = _context.Products.ToList();
            foreach (var product in listProducts)
            {

                // @if (SignInManager.IsSignedIn(User))
                // {
                //     @if (User.IsInRole("Admin"))
                //     {
                //         continue;
                //     }
                // }
                // // var roles = await UserManager.GetRolesAsync(User);
                // // if (roles.Contains("Admin"))
                // // {
                // //     continue;
                // // }
                int ProductQuantities = _context.BillDetails
                .Where(bd => bd.ID_Product == product.ID_Product) // Lọc theosản phẩm
                .Sum(bd => bd.Product_Quantity);

                var ratio1 = (product.ViewCount == 0) ? 0 : (ProductQuantities * 100.0 / product.ViewCount);
                <div>

                    <div class="mb-1 flex justify-between">
                        <span class="font-medium">@product.Name_Product</span>
                        <div class="flex gap-6">
                            <div class="opacity-30">
                                <div class="flex gap-3 text-sm">
                                    <div class="flex items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
                                        </svg>
                                        <span>@ProductQuantities</span>
                                    </div>
                                    <div class="flex items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        </svg>
                                        <span>@product.ViewCount</span>
                                    </div>
                                </div>
                            </div>
                            <span class="text-sm">@ratio1?.ToString("0.##")%</span>
                        </div>
                    </div>
                    <div class="h-2.5 w-full rounded-full bg-gray-200">
                        <div class="h-2.5 rounded-full bg-gradient-to-r from-green-500 to-blue-500" style="width: @ratio1?.ToString("0.##")%"></div>
                    </div>
                </div>
            }
        }
    </div>


    <h3>doanh thu từng tháng</h3>
    @{
        var monthlyRevenueList = ViewBag.monthlyRevenueList;
        if (monthlyRevenueList != null)
        {
            foreach (var item in monthlyRevenueList)
            {
                <p>@item.Month.ToString(("MM/yyyy")) : @item.Revenue.ToString() </p>
            }
        }
    }

    <h3> doanh thu từng shop</h3>
    @{
        var shopRevenueList = ViewBag.shopRevenueList;
        if (shopRevenueList != null)
        {
            foreach (var item in shopRevenueList)
            {
                <p>@item.Name.ToString() : @item.Revenue.ToString() </p>
            }
        }
    }

    <h2> location</h2>
    @{

        var listShop = ViewBag.addressShops;
        foreach (var item in listShop)
        {
            <p>@item</p>
        }
        var location = Context.Request.Cookies["Locations"];
        <p>@location</p>
        <p id="location"></p>
        // if (Request.Cookies.TryGetValue("Locations", out string locationsString))
        // {
        //     List<string> locations = locationsString.Split(',').ToList();
        //     // Ở đây, chúng ta sử dụng dấu phẩy để phân tách chuỗi và chuyển nó thành danh sách.
        // }
    }

    <div id="distance-result-cookie"></div>



    <div class="text-center">
        <h1 class="display-4">Tính khoảng cách giữa hai địa chỉ</h1>
        @*  <input type="text" id="address1" placeholder="Địa chỉ 1" value="29 trần thị nghĩ phường 7 gò vấp, thành phố hồ chí minh" />
        <input type="text" id="address2" placeholder="Địa chỉ 2" value="123 lê đức thọ quận gò vấp thành phố hồ chí minh" /> *@
        <button id="calculate-distance">Tính khoảng cách</button>
        <p id="distance-result"></p>
        <p id="distance-result-map"></p>
        <p id="nearest_Shop"></p>
    </div>

</section>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="../node_modules/tw-elements/dist/js/tw-elements.umd.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "/Admin/Home/GetList",
            data: "",
            contextType: "application/json; chartset=utf8",
            dataType: "json",
            success: OnSuccess,
        });
        function OnSuccess(data) {
            const barChart = document.getElementById('barChart');
            const pieChart = document.getElementById('pieChart');
            var _data = data;
            var _labels = _data[0];
            var _ChartData = _data[1];
            var colors = ['Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray',
                'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray',
                'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Orange', 'Pink', 'Cyan', 'Magenta', 'Lime', 'Teal', 'Brown', 'Gray'];

            new Chart(barChart,
                {
                    type: 'bar',
                    data: {
                        labels: _labels,
                        datasets: [{
                            backgroundColor: colors,
                            data: _ChartData,
                            borderWidth: 1,
                        }]
                    }
                });
        }
    });

</script>

<script>

    // Chart
    const dataLine = {
        type: 'line',
        data: {
            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday '],
            datasets: [
                {
                    label: 'Biểu đồ lượt xem của sản phẩm',
                    data: [2112, 2343, 2545, 3423, 2365, 1985, 987],
                },
            ],
        },
    };

    new Chart(document.getElementById('line-chart'), dataLine);
</script>
<script>
    // Chart
    const dataRadar = {
        type: 'radar',
        data: {
            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday '],
            datasets: [
                {
                    label: 'Biểu đồ doanh thu từng tháng',
                    data: [2112, 2343, 2545, 3423, 2365, 1985, 987],
                },
            ],
        },
    };

    new Chart(document.getElementById('radar-chart'), dataRadar);
</script>



@{
    const String temp = "https://unpkg.com/@turf/turf@6.5.0/turf.min.js";
    <script src="@temp"></script>

}
@section Scripts {
    <script src="https://api.tiles.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js"></script>
    <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css" rel="stylesheet" />
    @* <script src="https://unpkg.com/@@turf/turf@6.5.0/turf.min.js"></script> *@

    <script>
        // Thêm Access Token của Mapbox
        mapboxgl.accessToken = 'pk.eyJ1IjoibGV0aWVudGhhbmgyMjExMjAwMiIsImEiOiJjbG9nMDA5ZWowcmh0MmxvMWc1Ynp4bWNsIn0.r7Uo5Y_635S492LaUmSekA';


        var cookieString = document.cookie;
        var locationCookie = cookieString.match(/Locations=([^;]+)/);

        // Kiểm tra xem có cookie "Locations" không và lấy giá trị
        var locationValue = locationCookie[1];

        // Giải mã URL và tách thành các địa điểm
        var decodedValue = decodeURIComponent(locationValue);
        var locationsArray = decodedValue.split("|");


        // var locationsArray = ["828 Sư Vạn Hành, Phường 13, Quận 10, TP Hồ Chí Minh",
        //     "Quốc Lộ 22, Tân Xuân, Hóc Môn, TP Hồ Chí Minh",
        //     "12 Phan Thục Duyên, Phường 4 Quận Tân Bình, TP Hồ Chí Minh ",
        //     "ggggggggggggggggggggggggggg"
        //  ];

        var locationUser = "29 Trần Thị Nghĩ, Phường 7, Quận Gò Vấp, TP Hồ Chí Minh";
        var nearest = 10000000;
        var nearestShop = '';
        document.getElementById('calculate-distance').addEventListener('click', function () {
            var result = '';
            locationsArray.forEach(item => {
                //var address1 = document.getElementById('address1').value;
                //var address2 = document.getElementById('address2').value;
                var address1 = locationUser;
                var address2 = item;

                // Sử dụng Mapbox Geocoding API để tìm tọa độ của địa chỉ 1 và địa chỉ 2
                geocodeAddress(address1, function (point1) {
                    geocodeAddress(address2, function (point2) {
                        // Sử dụng Turf.js để tính khoảng cách giữa hai điểm
                        var options = { units: 'kilometers' };
                        var distance = turf.distance(point1, point2, options);
                        distance = distance.toFixed(2);
                        //so sanh
                        var number1 = parseFloat(distance);
                        var number2 = parseFloat(nearest);
                        if (number1 < number2) {
                            nearest = distance;
                            nearestShop = item;
                            document.cookie = "nearest=" + nearest;
                            document.cookie = "nearestShop=" + nearestShop;
                        }

                        // Lưu kết quả vào cookie
                        document.cookie = "distance=" + distance;

                        result += distance.toString() + "|";
                        document.getElementById('distance-result').textContent = 'Khoảng cách: ' + result + ' km';
                        document.getElementById('nearest_Shop').textContent = "Shop: " + nearestShop + ': ' + nearest + "km";

                    });
                });



                // Lấy giá trị của cookie "distance" bằng JavaScript
                // var distanceCookie = document.cookie
                //     .split("; ")
                //     .find(row => row.startsWith("distance="));

                // if (distanceCookie) {
                //     var distanceValue = distanceCookie.split("=")[1];
                //     document.getElementById("distance-result-cookie").textContent = "Distance from Cookie: " + distanceValue;
                // } else {
                //     document.getElementById("distance-result-cookie").textContent = "No distance value found in the cookie.";
                // }

            });
            document.cookie = "result=" + result;

        });

        // Hàm sử dụng Mapbox Geocoding API để lấy tọa độ từ địa chỉ
        function geocodeAddress(address, callback) {
            fetch('https://api.mapbox.com/geocoding/v5/mapbox.places/' + encodeURIComponent(address) + '.json?access_token=' + mapboxgl.accessToken)
                .then(function (response) {
                    return response.json();
                })
                .then(function (data) {
                    if (data.features && data.features.length > 0) {
                        var coordinates = data.features[0].geometry.coordinates;
                        callback(coordinates);
                    } else {
                        console.error('Không tìm thấy địa chỉ:', address);
                        // Lưu kết quả vào cookie
                        document.cookie = "distance=" + "Không tìm thấy đia chỉ: " + address;
                        document.getElementById('distance-result-map').textContent = " không tìm thấy địa chỉ, Vui lòng cung cấp đúng address";
                    }
                })
                .catch(function (error) {
                    console.error('Lỗi:', error);
                });
        }
    </script>

}